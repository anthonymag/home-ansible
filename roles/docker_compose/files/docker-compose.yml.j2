version: '3.2'
services:

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    restart: always
    ports:
      - 13378:80
    volumes:
      - /mnt/media/audiobooks:/audiobooks
      - /mnt/media/podcasts:/podcasts
      - /services/audiobookshelf/config:/config
      - /services/audiobookshelf/metadata:/metadata
    environment:
      - TZ={{ time_zone }}
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Media'
      - homepage.name=Audiobookshelf
      - homepage.icon=https://raw.githubusercontent.com/advplyr/audiobookshelf/master/client/static/icon.svg
      - homepage.href={{ bw_secrets.abs_url }}

  authentik-postgresql:
    image: docker.io/library/postgres:12-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /services/authentik/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: {{ bw_secrets.authentik_psql_pass }}
      POSTGRES_USER: {{ bw_secrets.authentik_psql_user }}
      POSTGRES_DB: {{ bw_secrets.authentik_psql_db }}
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - /services/authentik/redis/data:/data
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.4.2
    container_name: authentik-server
    restart: unless-stopped
    user: root
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: {{ bw_secrets.authentik_psql_user }}
      AUTHENTIK_POSTGRESQL__NAME: {{ bw_secrets.authentik_psql_db }}
      AUTHENTIK_POSTGRESQL__PASSWORD: {{ bw_secrets.authentik_psql_pass }}
      AUTHENTIK_SECRET_KEY: {{ bw_secrets.authentik_secret_key }}
      AUTHENTIK_ERROR_REPORTING_ENABLED: "true"
    volumes:
      - /services/authentik/media:/media
      - /services/authentik/custom-templates:/templates
    ports:
      - "9000:9000"
      - "9443:9443"
    depends_on:
      - authentik-postgresql
      - authentik-redis
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Data'
      - homepage.name=Authentik
      - homepage.icon=https://raw.githubusercontent.com/goauthentik/authentik/main/web/icons/icon.svg
      - homepage.href={{ bw_secrets.authentik_url }}

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.4.2
    container_name: authentik-worker
    restart: unless-stopped
    user: root
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: {{ bw_secrets.authentik_psql_user }}
      AUTHENTIK_POSTGRESQL__NAME: {{ bw_secrets.authentik_psql_db }}
      AUTHENTIK_POSTGRESQL__PASSWORD: {{ bw_secrets.authentik_psql_pass }}
      AUTHENTIK_SECRET_KEY: {{ bw_secrets.authentik_secret_key }}
      AUTHENTIK_ERROR_REPORTING_ENABLED: "true"
    # user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /services/authentik/media:/media
      - /services/authentik/certs:/certs
      - /services/authentik/custom-templates:/templates
    depends_on:
      - authentik-postgresql
      - authentik-redis
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
    volumes:
      - /services/bazarr/config:/config
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows
      - /mnt/media/anime:/anime
    ports:
      - 6767:6767
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Media Backend'
      - homepage.name=Bazarr
      - homepage.icon=https://raw.githubusercontent.com/morpheus65535/bazarr/master/frontend/public/images/logo64.png
      - homepage.href=https://bazarr.antcar.casa

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
    - 8359:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis-cadvisor
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Observability
      - homepage.name=CAdvisor
      - homepage.icon=https://netdata.cloud/img/cadvisor.png
      - homepage.href=https://cadvisor.antcar.casa

  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
    volumes:
      - /services/calibre/config:/config
      - /media/calibre_library:/library
      - /mnt/media/books:/books
      - /mnt/media/comics:/comics
      - /mnt/media/manga:/manga
      - /media/downloads:/downloads
    ports:
      - 8008:8080
      - 8081:8081
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Books
      - homepage.name=Calibre
      - homepage.icon=/icons/calibre.svg
      - homepage.href=https://calibre.antcar.casa

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
      - DOCKER_MODS=linuxserver/mods:universal-calibre
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
    volumes:
      - /services/calibre-web/config:/config
      - /media/calibre_library:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Books
      - 'homepage.name=Calbre Web'
      - homepage.icon=/icons/calibreweb.svg
      - homepage.href=https://books.antcar.casa


  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
      - DELUGE_LOGLEVEL=info
    volumes:
      - deluge-config:/config
      - /media/downloads:/downloads
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Media Backend'
      - homepage.name=Deluge
      - homepage.icon=https://upload.wikimedia.org/wikipedia/commons/8/85/Deluge-Logo.svg
      - homepage.href=https://deluge.antcar.casa

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Observability
      - homepage.name=Dozzle
      - homepage.icon=https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/dozzle.png
      - homepage.href=https://dozzle.antcar.casa

  esphome:
    image: esphome/esphome:latest
    container_name: esphome
    volumes:
      - esphome-config:/config:rw
      # Use local time for logging timestamps
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Home Automation'
      - homepage.name=ESPHome
      - homepage.icon=https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/esphome.png
      - homepage.href=https://esphome.antcar.casa

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3002:3000'
    volumes:
      - grafana:/var/live/grafana
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Observability
      - homepage.name=Grafana
      - homepage.icon=https://upload.wikimedia.org/wikipedia/commons/3/3b/Grafana_icon.svg
      - homepage.href=https://grafana.antcar.casa

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:2024.5
    volumes:
      - /services/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    labels:
      - 'homepage.group=Home Automation'
      - 'homepage.name=Home Assistant'
      - homepage.icon=https://upload.wikimedia.org/wikipedia/en/4/49/Home_Assistant_logo_%282023%29.svg
      - homepage.href=https://ha.antcar.casa

  homeassistant-s3-backup:
    container_name: homeassistant-s3-backup
    image: istepanov/backup-to-s3:latest
    restart: always
    environment:
      - ACCESS_KEY={{ bw_secrets.s3_backup_aws_access_key }}
      - 'SECRET_KEY={{ bw_secrets.s3_backup_aws_secret_key }}'
      - S3_PATH=s3://anthonymag-backups/homeassistant/
      - 'CRON_SCHEDULE=0 4 * * *'
    volumes:
      - /services/homeassistant/config/backups:/data:ro
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: always
    ports:
      - 3001:3000
    volumes:
      - /services/homepage/config:/app/config
      - /services/homepage/icons:/app/public/icons
      - /media:/media:ro
      - /mnt/media:/nas:ro
      - /var/run/docker.sock:/var/run/docker.sock 
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
    group_add:
      - "109" # render group
      - "44" # video group
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin-config:/config
      - jellyfin-cache:/cache
      - type: bind
        source: /mnt/media/movies
        target: /media/movies
      - type: bind
        source: /mnt/media/tvshows
        target: /media/tvshows
      - type: bind
        source: /mnt/media/anime
        target: /media/anime
    restart: 'unless-stopped'
    environment:
      - JELLYFIN_PublishedServerUrl={{ bw_secrets.jellyfin_url }}
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/icon-transparent.svg
      - homepage.href={{ bw_secrets.jellyfin_url }}

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always
    ports:
      - 5055:5055
    environment:
      - LOG_LEVEL=debug
      - TZ={{ time_zone }}
    volumes:
      - /services/jellyseerr/config:/app/config
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Media
      - homepage.name=Jellyseerr
      - homepage.icon=/icons/jellyseerr.svg
      - homepage.href={{ bw_secrets.jellyseerr_url }}

  mosquitto:
    image: eclipse-mosquitto:latest
    restart: always
    network_mode: host
    container_name: mqtt
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /services/mosquitto/config:/mosquitto/config
      - /services/mosquitto/data:/mosquitto/data
      - /services/mosquitto/log:/mosquitto/log
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    user: root
    ports:
      - '4533:4533'
    restart: unless-stopped
    environment:
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      - ND_SESSIONTIMEOUT=730h # 1 month
      - ND_ENABLESHARING=true
      - ND_ENABLECOVERANIMATION=false
      - 'ND_BASEURL={{ bw_secrets.navidrome_url }}'
      - 'ND_UILOGINBACKGROUNDURL=aHR0cHM6Ly9mcmVlNGt3YWxscGFwZXJzLmNvbS91cGxvYWRzL29yaWdpbmFscy8yMDIwLzAyLzI1L3BlcnNvbmEtbmlnaHR0aW1lLXRva3lvLXdhbGxwYXBlcgo='
    volumes:
      - navidrome-data:/data
      - /mnt/media/music:/music:ro
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Media
      - homepage.name=Navidrome
      - homepage.icon=https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/navidrome.png
      - homepage.href={{ bw_secrets.navidrome_url }}

  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    restart: unless-stopped
    ports:
      - 81:81    # admin page
      - 8000:80  # HTTP
      - 443:443 # HTTPS
    volumes:
      - /services/nginx/data:/data
      - /services/nginx/letsencrypt:/etc/letsencrypt
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Networking
      - homepage.name=Nginx
      - homepage.icon=https://nginxproxymanager.com/icon.png
      - homepage.href=https://nginx.antcar.casa

  planka:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka
    restart: on-failure
    volumes:
      - /services/planka/user-avatars:/app/public/user-avatars
      - /services/planka/project-background-images:/app/public/project-background-images
      - /services/planka/attachments:/app/private/attachments
    ports:
      - 3003:1337
    environment:
      - BASE_URL=https://planka.antcar.casa
      - DATABASE_URL=postgresql://{{ bw_secrets.planka_psql_user }}:{{ bw_secrets.planka_psql_pass }}@planka-postgresql/{{ bw_secrets.planka_psql_db }}
      - SECRET_KEY={{ bw_secrets.planka_secret_key }}
      - TOKEN_EXPIRES_IN=365
      - DEFAULT_ADMIN_EMAIL={{ bw_secrets.planka_admin_email }}
      - DEFAULT_ADMIN_PASSWORD={{ bw_secrets.planka_admin_password }}
      - DEFAULT_ADMIN_NAME={{ bw_secrets.planka_admin_user | capitalize }}
      - DEFAULT_ADMIN_USERNAME={{ bw_secrets.planka_admin_user }}
    labels:
      - homepage.group=Productivity
      - homepage.name=Planka
      - homepage.icon=/icons/planka.svg
      - homepage.href=https://planka.antcar.casa
    depends_on:
      planka-postgresql:
        condition: service_healthy

  planka-postgresql:
    image: postgres:14-alpine
    container_name: planka-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /services/planka/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: {{ bw_secrets.planka_psql_pass }}
      POSTGRES_USER: {{ bw_secrets.planka_psql_user }}
      POSTGRES_DB: {{ bw_secrets.planka_psql_db }}
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    depends_on:
    - cadvisor
    ports:
      - 9090:9090
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - /var/lib/prometheus:/etc/prometheus
      - prom-data:/prometheus
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Observability
      - homepage.name=Prometheus
      - homepage.icon=https://upload.wikimedia.org/wikipedia/commons/3/38/Prometheus_software_logo.svg
      - homepage.href=https://prometheus.antcar.casa

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
    volumes:
      - prowlarr-data:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Media Backend'
      - homepage.name=Prowlarr
      - homepage.icon=https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-logo.png
      - homepage.href=https://prowlarr.antcar.casa

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: "{{ default_user_uid }}:{{ default_user_gid }}"
    volumes:
      - /services/recyclarr/config:/config
    environment:
      - TZ={{ time_zone }}
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  redis-cadvisor:
    image: redis:latest
    container_name: redis-cadvisor
    restart: always
    ports:
    - 6379:6379
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  root-s3-backup:
    container_name: root-s3-backup
    image: istepanov/backup-to-s3:latest
    restart: always
    environment:
      - ACCESS_KEY={{ bw_secrets.s3_backup_aws_access_key }}
      - 'SECRET_KEY={{ bw_secrets.s3_backup_aws_secret_key }}'
      - S3_PATH=s3://anthonymag-backups/root/
      - 'CRON_SCHEDULE=0 5 * * *'
    volumes:
      - /root-backups:/data:ro
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  samba:
    image: ghcr.io/servercontainers/samba:latest
    container_name: samba
    restart: unless-stopped
    environment:
      ACCOUNT_{{ bw_secrets.samba_username01 }}: {{ bw_secrets.samba_password01 }}
      ACCOUNT_{{ bw_secrets.samba_username02 }}: {{ bw_secrets.samba_password02 }}
      UID_{{ bw_secrets.samba_username01 }}: 102
      UID_{{ bw_secrets.samba_username02 }}: 101
      SAMBA_VOLUME_CONFIG_media: |
        [media]
         path = /shares/media
         guest ok = no
         browseable = yes
         public = no
         writeable = yes
         available = yes
         write list = {{ bw_secrets.samba_username01 }}, {{ bw_secrets.samba_username02 }}
      SAMBA_VOLUME_CONFIG_services: |
        [services]
         path = /shares/services
         guest ok = no
         browseable = yes
         public = no
         writeable = yes
         available = yes
         write list = {{ bw_secrets.samba_username01 }}, {{ bw_secrets.samba_username02 }}
      SAMBA_VOLUME_CONFIG_drive: |
        [drive]
         path = /shares/drive
         guest ok = no
         browseable = yes
         public = no
         writeable = yes
         available = yes
         write list = {{ bw_secrets.samba_username01 }}, {{ bw_secrets.samba_username02 }}
      SAMBA_VOLUME_CONFIG_drive2: |
        [drive2]
         path = /shares/drive2
         guest ok = no
         browseable = yes
         public = no
         writeable = yes
         available = yes
         write list = {{ bw_secrets.samba_username01 }}, {{ bw_secrets.samba_username02 }}
      SAMBA_VOLUME_CONFIG_root: |
        [root]
         path = /shares/root
         guest ok = no
         browseable = yes
         public = no
         writeable = yes
         available = yes
         write list = {{ bw_secrets.samba_username01 }}, {{ bw_secrets.samba_username02 }}
      SAMBA_CONF_LOG_LEVEL: 3
    volumes:
      - /media:/shares/media
      - /services:/shares/services
      - /drive:/shares/drive
      - /drive2:/shares/drive2
      - /root:/shares/root
    ports:
      - 445:445
    cap_add:
      - CAP_NET_ADMIN
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"

  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    restart: unless-stopped
    pids_limit: 50
    mem_limit: 256mb
    memswap_limit: 256mb
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /config/:size=10M,uid=927,gid=927,mode=1700
      - /var/lib/tor/:size=15M,uid=927,gid=927,mode=1700
      - /run/tor/:size=1M,uid=927,gid=927,mode=1700
    ports:
      - 5000:5000
    environment:
      - WHOOGLE_ALT_TW=farside.link/nitter
      - WHOOGLE_ALT_YT=farside.link/invidious
      - WHOOGLE_ALT_IG=farside.link/bibliogram/u
      - WHOOGLE_ALT_RD=farside.link/libreddit
      - WHOOGLE_ALT_MD=farside.link/scribe
      - WHOOGLE_ALT_TL=farside.link/lingva
      - WHOOGLE_ALT_IMG=farside.link/rimgo
      - WHOOGLE_ALT_WIKI=farside.link/wikiless
      - WHOOGLE_ALT_IMDB=farside.link/libremdb
      - WHOOGLE_ALT_QUORA=farside.link/quetre
      - HTTPS_ONLY=1

      - WHOOGLE_CONFIG_NEAR=jacksonville
      - WHOOGLE_CONFIG_COUNTRY=US
      - WHOOGLE_CONFIG_LANGUAGE=lang_en
      # See app/static/settings/languages.json for values
      - WHOOGLE_CONFIG_SEARCH_LANGUAGE=lang_en
      - WHOOGLE_CONFIG_DISABLE=0
    #  - WHOOGLE_CONFIG_BLOCK=pinterest.com,whitehouse.gov
      - WHOOGLE_CONFIG_THEME=system
      - WHOOGLE_CONFIG_ALTS=1
      - WHOOGLE_CONFIG_NEW_TAB=1
      - WHOOGLE_CONFIG_VIEW_IMAGE=1
      # Remove everything except basic result cards from all search queries
      - WHOOGLE_MINIMAL=0
      - WHOOGLE_RESULTS_PER_PAGE=10
      - WHOOGLE_AUTOCOMPLETE=1
      - EXPOSE_PORT=5000
      - WHOOGLE_CONFIG_URL={{ bw_secrets.whoogle_url }}

      # - WHOOGLE_CONFIG_STYLE=":root { /* LIGHT THEME COLORS */ --whoogle-background: #d8dee9; --whoogle-accent: #2e3440; --whoogle-text: #3B4252; --whoogle-contrast-text: #eceff4; --whoogle-secondary-text: #70757a; --whoogle-result-bg: #fff; --whoogle-result-title: #4c566a; --whoogle-result-url: #81a1c1; --whoogle-result-visited: #a3be8c; /* DARK THEME COLORS */ --whoogle-dark-background: #222; --whoogle-dark-accent: #685e79; --whoogle-dark-text: #fff; --whoogle-dark-contrast-text: #000; --whoogle-dark-secondary-text: #bbb; --whoogle-dark-result-bg: #000; --whoogle-dark-result-title: #1967d2; --whoogle-dark-result-url: #4b11a8; --whoogle-dark-result-visited: #bbbbff; }"
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - homepage.group=Productivity
      - homepage.name=Whoogle
      - homepage.icon=/icons/search.svg
      - homepage.href={{ bw_secrets.whoogle_url }}

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    restart: unless-stopped
    volumes:
      - /services/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8080:8080
    environment:
      - TZ={{ time_zone }}
    devices:
      - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_323cbd3fdb66ec11b6f72342ef680de7-if00-port0:/dev/ttyACM0
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Home Automation'
      - homepage.name=Zigbee2MQTT
      - homepage.icon=https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/dev/images/logo_vector.svg
      - homepage.href=https://z2m.antcar.casa

  zwave-js-ui:
    container_name: zwave
    image: zwavejs/zwave-js-ui:latest
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET={{ bw_secrets.zwave_session_secret }}
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - TZ={{ time_zone }}
    networks:
      - zwave
    devices:
      - '/dev/serial/by-id/usb-Silicon_Labs_Zooz_ZST10_700_Z-Wave_Stick_ccd9f8b4da60ec11907e3d7625bfaa52-if00-port0:/dev/zwave'
    volumes:
      - /services/zwave/config:/usr/src/app/store
    ports:
      - '8091:8091'
      - '3000:3000'
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Home Automation'
      - homepage.name=ZWave-JS-UI
      - homepage.icon=https://raw.githubusercontent.com/digiblur/unraid-docker-templates/master/images/zwave-js-ui.png
      - homepage.href=https://zwave.antcar.casa

{% for service in media_services %}
  {{ service.name }}:
    image: {{ service.image }}:{{ service.version }}
    container_name: {{ service.name }}
    environment:
      - PUID={{ default_user_uid }}
      - PGID={{ default_user_gid }}
      - TZ={{ time_zone }}
    volumes:
      - /services/{{ service.name }}/config:/config
      - /media/downloads:/downloads
{% for content_type in service.content %}
      - /mnt/media/{{ content_type }}:/{{ content_type }}
{% endfor %}
    ports: {{ service.ports }}
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels:
      - 'homepage.group=Media Backend'
      - 'homepage.name={{ service.name | capitalize }}'
      - homepage.icon={% if service.icon is defined %}{{ service.icon }}{% else %}/icons/{{ service.name }}.svg{% endif %}{{''}}
      - homepage.href=https://{{ service.name }}.antcar.casa

{% endfor %}

networks:
  zwave:

volumes:
  deluge-config:
  esphome-config:
  grafana:
    name: grafana
  homepage-config:
  jellyfin-config:
  jellyfin-cache:
  navidrome-data:
  prom-data:
    name: prom-data
  prowlarr-data:
    name: prowlarr-data
  sabnzbd-config:
    name: sabnzbd-config
  services:
    name: services
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /services
